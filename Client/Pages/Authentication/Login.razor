@using Microsoft.AspNetCore.Localization
@inject IStringLocalizer<Login> localizer
@inject IJSRuntime JS
@inject NavigationManager UriHelper
@inject Queries graphQLQueries
@inject CurrentUser currentUser
@inject NavigationManager navManager;

@code {
    public string Email { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;
    public bool RememberMe { get; set; } = false;

    private string errorMessage = string.Empty;
    private string _language = CultureInfo.CurrentCulture.ToString();
    private string selectedLanguage
    {
        get
        {
            return _language;
        }
        set
        {
            if (value != _language)
            {
                Console.WriteLine(value);
                if (!string.IsNullOrEmpty(value))
                {
                    UriHelper.NavigateTo($"/Culture/{value}", true);
                }
                _language = value;
            }
        }
    }

    public async void SignIn()
    {
        if (ValidateForm())
        {
            var userDetails = graphQLQueries.RunSelectUserWhere(new SelectUserWhereArgs
            {
                email = Email,
                password = Password
            });
            if (userDetails != null)
            {
                currentUser.Id = userDetails.id;
                currentUser.FirstName = userDetails.first_name;
                currentUser.LastName = userDetails.last_name;
                currentUser.Roles = userDetails.roles;
                currentUser.IsLoggedIn = true;
                await JS.InvokeVoidAsync("KTCookie.setCookie", "helpukraineUser", JsonConvert.SerializeObject(currentUser));
                navManager.NavigateTo("/");
            }
            else
            {
                errorMessage = localizer["Invalid credentials"];
                await JS.InvokeVoidAsync("SwalFireError", localizer["Ops! An error has occurred!"].ToString(), localizer["Okey, got it!"].ToString());
            }
        }
        else
        {
            await JS.InvokeVoidAsync("SwalFireError", localizer["Ops! An error has occurred!"].ToString(), localizer["Okey, got it!"].ToString());
        }
    }

    public bool ValidateForm()
    {
        return ValidateEmail() && ValidatePassword();
    }

    public bool ValidateEmail()
    {
        if (string.IsNullOrEmpty(Email))
        {
            errorMessage = localizer["Email is required"];
            return false;
        }
        if (!(Email.Contains("@") && Email.Contains(".")))
        {
            errorMessage = localizer["Invalid email"];
            return false;
        }
        return true;
    }

    public bool ValidatePassword()
    {
        if (string.IsNullOrEmpty(Password))
        {
            errorMessage = localizer["Password is required"];
            return false;
        }
        return true;
    }


}

<!--begin::Login Header-->
<div class="d-flex flex-center mb-15">
    <a href="#">
        <img src="assets/media/logos/logo-letter-9.png" class="max-h-100px" alt="" />
    </a>
</div>
<!--end::Login Header-->
<!--begin::Login Sign in form-->
<div class="login-signin">
    <div class="mb-20">
        <h3>@localizer["Sign in"]</h3>
        <p class="opacity-60 font-weight-bold">@localizer["Please enter account details to log in in control panel"]</p>
        <div class="form-group row">
            <div class=" col-lg-4 col-md-9 col-sm-12">
                <select class="form-control" id="country" @bind="selectedLanguage">
                    <option value="en">@localizer["English"]</option>
                    <option value="ro">@localizer["Romanian"]</option>
                    <option value="uk">@localizer["Ukrainian"]</option>
                </select>
            </div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
    <form class="form" id="kt_login_signin_form">
        <div class="form-group">
            <input class="form-control h-auto text-white placeholder-white opacity-70 bg-dark-o-70 rounded-pill border-0 py-4 px-8 mb-5" type="email" placeholder="@localizer["Email"]" name="email" autocomplete="off" @bind="Email" @bind:event="onchange" />
        </div>
        <div class="form-group">
            <input class="form-control h-auto text-white placeholder-white opacity-70 bg-dark-o-70 rounded-pill border-0 py-4 px-8 mb-5" type="password" placeholder="@localizer["Password"]" name="password" @bind="Password" @bind:event="onchange" />
        </div>
        <div class="form-group d-flex flex-wrap justify-content-between align-items-center px-8">
            <div class="checkbox-inline">
                <label class="checkbox checkbox-outline checkbox-white text-white m-0">
                    <input type="checkbox" name="remember" @bind="RememberMe" @bind:event="onchange" />
                    <span></span>@localizer["Remember me"]
                </label>
            </div>
            <a href="javascript:;" id="kt_login_forgot" class="text-white font-weight-bold">@localizer["Forgot password"]</a>
        </div>
        <div class="form-group text-center mt-10">
            <button id="kt_login_signin_submit" class="btn btn-pill btn-outline-white font-weight-bold opacity-90 px-15 py-3" @onclick="SignIn">@localizer["Sign in"]</button>
        </div>
    </form>
    <div class="mt-10">
        <span class="opacity-70 mr-4">@localizer["Don't have an account yet?"]</span>
        <a href="javascript:;" id="kt_login_signup" class="text-white font-weight-bold">@localizer["Sign up"]</a>
    </div>
</div>
<!--end::Login Sign in form-->